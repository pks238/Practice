#include "pch.h"

// Структура точки
typedef struct
{
    double x;
    double y;
} point;

// Определить принадлежит ли точка треугольнику
bool isPointInTriangle(point p0, point p1, point p2, point p3);

// Тестирование

TEST(Tests, Test1)
{
    point p0, p1, p2, p3;

    // Координаты вершины треугольника A
    p1.x = 4.6;
    p1.y = -1.02;

    // Координаты вершины треугольника B
    p2.x = 6.3;
    p2.y = 4.38;

    // Координаты вершины треугольника C
    p3.x = 12.14;
    p3.y = 2.58;

    // Координаты точки D
    p0.x = 7.78;
    p0.y = 2.38;

    // Проверка результата
    EXPECT_TRUE(isPointInTriangle(p0, p1, p2, p3));
}

TEST(Tests, Test2)
{
    point p0, p1, p2, p3;

    // Координаты вершины треугольника A
    p1.x = 4.6;
    p1.y = -1.02;

    // Координаты вершины треугольника B
    p2.x = 6.3;
    p2.y = 4.38;

    // Координаты вершины треугольника C
    p3.x = 12.14;
    p3.y = 2.58;

    // Координаты точки D
    p0.x = 10.85;
    p0.y = 1.96;

    // Проверка результата
    EXPECT_TRUE(isPointInTriangle(p0, p1, p2, p3));
}

TEST(Tests, Test3)
{
    point p0, p1, p2, p3;

    // Координаты вершины треугольника A
    p1.x = 4.6;
    p1.y = -1.02;

    // Координаты вершины треугольника B
    p2.x = 6.3;
    p2.y = 4.38;

    // Координаты вершины треугольника C
    p3.x = 12.14;
    p3.y = 2.58;

    // Координаты точки D
    p0.x = 4.72;
    p0.y = 0.24;

    // Проверка результата
    EXPECT_FALSE(isPointInTriangle(p0, p1, p2, p3));
}

// Определить принадлежит ли точка треугольнику
bool isPointInTriangle(point p0, point p1, point p2, point p3)
{
    int a = (p1.x - p0.x) * (p2.y - p1.y) - (p2.x - p1.x) * (p1.y - p0.y);
    int b = (p2.x - p0.x) * (p3.y - p2.y) - (p3.x - p2.x) * (p2.y - p0.y);
    int c = (p3.x - p0.x) * (p1.y - p3.y) - (p1.x - p3.x) * (p3.y - p0.y);

    if((a >= 0 && b >= 0 && c >= 0) || (a <= 0 && b <= 0 && c <= 0))
        return true;
    else
        return false;
} 
